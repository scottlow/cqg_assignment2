#!/usr/bin/python

import sys
import os
import file_util
import copy

template_string = '''\
product_family = 'dijkstra'
question_type = 'dijkstra'

graph = $a
source = $b
dest = $c
iterations = $d
table_hotspots = $e
'''

if len(sys.argv) != 3:
	print 'Usage: dijkstra_generate.py template question_directory'
	sys.exit(1)

try:
	template = file_util.dynamic_import(sys.argv[1])
except ImportError:
	print 'Failure while importing',sys.argv[1]
	sys.exit(2)

for group in template.group_list:
	prefix = group[0]
	question_id = 0

	for (source, dest, weight_overrides,
	 iterations, table_hotspots) in group[1:]:
		path = os.path.join(sys.argv[2],prefix+str(question_id))

		# create the question directory if necessary
		if not os.path.exists(path):
			try:
				os.mkdir(path)
			except:
				print 'Failure creating directory:', path
				sys.exit(3)

		# apply weight overrides on a deep copy of template.graph
		question_graph = copy.deepcopy(template.graph)
		for node in weight_overrides:
			question_graph[node].update(weight_overrides[node])
		
		# write the next config
		config = os.path.join(path,'cqg_config.py')
		try:
			f = open(config,"w")
			config_string = template_string
			config_string = config_string.replace(
			 '$a',str(question_graph))
			config_string = config_string.replace(
			 '$b',"'"+source+"'")
			config_string = config_string.replace(
			 '$c',"'"+dest+"'")
			config_string = config_string.replace(
			 '$d',str(iterations))
			config_string = config_string.replace(
			 '$e',str(table_hotspots))
			f.write(config_string)
			f.close()
		except:
			print 'Failure creating file:', path
			sys.exit(4)

		question_id += 1

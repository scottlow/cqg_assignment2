#!/usr/bin/python

import sys
import os
import echo_util
import verify_util
import file_util

# list of verification identifier/condition pairs
condition_list = [
	['variables_defined',
		"'product_family', 'question_type', 'correct_answer'" +
		 " are defined"],
	['product_family',
		"'product_family' is 'echo'"],
	['question_type',
		"'question_type' is 'echo'"],
	['correct_answer',
		"'correct_answer' is an unsigned int"],
]

def verify_conditions(question_directory,config,condition_list):
	'''
	purpose
		verify each condition in condition_list
		on first failed condition, return error message
		otherwise, return None
	preconditions
		question_directory is a directory containing a config file
		config is a reference to the module in question_directory
		condition_list is a list where each element is a
		 list of two strings
	'''
	conditions_dictionary = {}
	for condition in condition_list:
		conditions_dictionary[condition[0]] = condition[1]

	for v in ['product_family','question_type','correct_answer']:
		if not (v in dir(config)):
			return(conditions_dictionary['variables_defined'])

	if not (config.product_family == 'echo'):
		return(conditions_dictionary['product_family'])

	if not (config.question_type == 'echo'):
		return(conditions_dictionary['question_type'])

	if not (type(config.correct_answer) == int and
	 config.correct_answer >= 0):
		return(conditions_dictionary['correct_answer'])

	return None # no errors found

# handle invocation from command line
if __name__ == '__main__':
	n = verify_util.question_verifier_main(sys.argv,
	 'Question Type echo: Question Verification Conditions',
	 condition_list,verify_conditions)

	if n == verify_util.COMMAND_LINE_SYNTAX_FAILURE:
		print 'Usage: echo_question_verifier.py [question_directory]'
	
	sys.exit(n)

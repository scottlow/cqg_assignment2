#!/usr/bin/python

import sys
import verify_util
import file_util

# list of verification identifier/condition pairs
condition_list = [
	['tuples_defined',
		"'tuples' is defined"],
	['tuples_list',
		"'tuples' is a list of int"],
	['tuples_element_type',
		'Each tuple element is an int'],
]

def verify_conditions(template,condition_list):
	'''
	purpose
		verify template against each condition in condition_list
		on first failed condition, return error message
		otherwise, return None
	preconditions
		template is a Python module reference
		condition_list is a list where each element is a 
		 list of two strings
	'''
	# convert conditions to dictionary
	conditions_dictionary = {}
	for condition in condition_list:
		conditions_dictionary[condition[0]] = condition[1]

	# test the conditions
	if not ('tuples' in dir(template)):
		return conditions_dictionary['tuples_defined']
	if not (type(template.tuples) == list):
		return conditions_dictionary['tuples_list']
	for i in template.tuples:
		if not (type(i) == int):
			return conditions_dictionary['tuples_element_type']

	# all passed
	return None

# handle invocation from command line
if __name__ == '__main__':
	n = verify_util.template_verifier_main(sys.argv,
	 'Question Type echo: Template Verification Conditions',
	 condition_list,verify_conditions)

	if n == verify_util.COMMAND_LINE_SYNTAX_FAILURE:
		print 'Usage: echo_template_verifier.py [template_file]'
	
	sys.exit(n)
